{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction to FEniCS This is a five-day course focused on solving partial differential equations (PDEs) using the FEniCS software package. The goal is to introduce the students to PDEs encountered in various engineering and science disciplines, such as solid mechanics, heat transfer, and mass transport. The course materials, including tutorials and exercises, were created as part of a five-day workshop at IIT Madras, in collaboration with Vanderbilt University, USA. These materials are presented in Jupyter Notebooks , which allow you to see both the code and its explanations, as well as the results, all together. The tutorials are comprehensive notebooks that demonstrate how to approach different types of problems using FEniCS. On the other hand, the exercises are meant to be interactive, and they encourage you to expand the notebooks by adding new functionalities. This way, you can develop your expertise in using FEniCS. What is FEniCS? FEniCS is a high-performance computing (HPC) capable tool that efficiently utilizes supercomputers and high-performance clusters to solve complex scientific problems. It supports parallel computing, JIT compilation, and integrates with PETSc and MPI for scalability and performance. Its HPC capabilities enable researchers to perform large-scale simulations and analyses effectively. FEniCS is an acronym FEniCS is an acronym that stands for \"Finite Element Computational Software.\" The inclusion of \"ni\" in the name is to create a balanced and appealing composition. The FEniCS software package was compiled at the University of Chicago, whose Phoenix mascot likely influenced the choice of the name. Github Repo FEniCS Workshop Authors Abhinav Gupta Ravindra Duddu","title":"Home"},{"location":"#introduction-to-fenics","text":"This is a five-day course focused on solving partial differential equations (PDEs) using the FEniCS software package. The goal is to introduce the students to PDEs encountered in various engineering and science disciplines, such as solid mechanics, heat transfer, and mass transport. The course materials, including tutorials and exercises, were created as part of a five-day workshop at IIT Madras, in collaboration with Vanderbilt University, USA. These materials are presented in Jupyter Notebooks , which allow you to see both the code and its explanations, as well as the results, all together. The tutorials are comprehensive notebooks that demonstrate how to approach different types of problems using FEniCS. On the other hand, the exercises are meant to be interactive, and they encourage you to expand the notebooks by adding new functionalities. This way, you can develop your expertise in using FEniCS.","title":"Introduction to FEniCS"},{"location":"#what-is-fenics","text":"FEniCS is a high-performance computing (HPC) capable tool that efficiently utilizes supercomputers and high-performance clusters to solve complex scientific problems. It supports parallel computing, JIT compilation, and integrates with PETSc and MPI for scalability and performance. Its HPC capabilities enable researchers to perform large-scale simulations and analyses effectively. FEniCS is an acronym FEniCS is an acronym that stands for \"Finite Element Computational Software.\" The inclusion of \"ni\" in the name is to create a balanced and appealing composition. The FEniCS software package was compiled at the University of Chicago, whose Phoenix mascot likely influenced the choice of the name.","title":"What is FEniCS?"},{"location":"#github-repo","text":"FEniCS Workshop","title":"Github Repo"},{"location":"#authors","text":"Abhinav Gupta Ravindra Duddu","title":"Authors"},{"location":"1_chapter/1_lesson/","text":"","title":"1 lesson"},{"location":"1_introduction/1_motivation/","text":"The motivation to create the Introduction to FEniCS course stems from several key objectives to address the needs and challenges faced by students and professionals in engineering and science disciplines. These motivations include: Bridging the Gap in PDE Problem-Solving Skills: The course is designed to equip participants with the necessary tools to solve partial differential equations (PDEs), which are prevalent in various fields such as solid mechanics, heat transfer, and mass transport. There is a recognized need for advanced problem-solving skills in these areas, and FEniCS offers a robust solution. Introducing High-Performance Computing (HPC) to a Wider Audience: FEniCS is not just another computational tool; it's a high-performance computing-capable platform that can significantly enhance the efficiency and scope of scientific computations. The course aims to democratize access to HPC capabilities, enabling more researchers and practitioners to perform large-scale simulations and complex analyses. Enhancing Interactive and Practical Learning: Traditional learning methods may need to equip learners to handle PDEs' real-world complexities fully. By using Jupyter Notebooks and interactive exercises, the course promotes an active learning environment where participants can see the immediate impact of the code they write and understand the practical applications of the theoretical concepts they learn. Promoting Collaborative and Cutting-Edge Research: By training a cohort of skilled individuals capable of utilizing FEniCS for various applications, the course aims to foster collaboration and innovation in scientific research and engineering solutions. The partnership between IIT Madras and Vanderbilt University in creating this course material reflects the global and collaborative approach to education and research. Fulfilling the Need for Scalable and Efficient Solutions: As scientific and engineering problems become more complex, the demand for scalable and efficient computational methods rises. FEniCS, with its capabilities for parallel computing and integration with other HPC tools, offers a pathway to meeting these demands. The course is motivated by the desire to empower participants with these advanced tools to address today's problems and future challenges. In summary, the motivation behind creating the Introduction to FEniCS course is to provide a comprehensive, interactive, and practical learning experience that enhances participants' abilities to solve complex PDEs, introduces them to high-performance computing, and prepares them for collaborative and innovative work in their respective fields.","title":"1 motivation"},{"location":"1_introduction/2_installation/","text":"Prerequisites To follow along with the examples, you need to install docker on your system. You need Windows 10/11 Education or Professional for this to work. This does not work on Windows 10/11 Home. Docker Paraview CMDER (Only for Windows) (After installation, open cmder and then go to Settings(Win+Alt+P)\u27a1import and choose the cmlab.xml provided in the repository.) Google Chrome (After installation, open Chrome and paste the following in the address bar, chrome://flags/. In the flags screen, enable WebGL Developer Extensions ) Install FEniCS Once the docker system is installed and running, open CMDER/terminal and run: docker pull iitrabhi/fenics_notebook Running To start the notebook server, use the following: docker run -p 8888:8888 -v host_system_path:/root/ -w /root/ iitrabhi/fenics_notebook Note: you should replace the variable host_system_path with the path of the folder that contains your code. e.g., If D:\\Codes contains your code, then to start the command line interface, you have to run: docker run -p 8888:8888 -v D:\\Codes:/root/ -w /root/ iitrabhi/fenics_notebook Once you run the above command in cmder, you will get a URL starting with http://127.0.0.1:8888/lab . Press Control and click on the URL to open a new Jupyter Notebook. If you have Windows home You can use google collab to run FEniCS on the cloud. Open Collab , upload your notebook and paste the following in the first cell of your notebook. try: import dolfin except ImportError: !wget \"https://fem-on-colab.github.io/releases/fenics-install.sh\" -O \"/tmp/fenics-install.sh\" && bash \"/tmp/fenics-install.sh\" import dolfin https://fem-on-colab.github.io/packages.html","title":"2 installation"},{"location":"1_introduction/2_installation/#prerequisites","text":"To follow along with the examples, you need to install docker on your system. You need Windows 10/11 Education or Professional for this to work. This does not work on Windows 10/11 Home. Docker Paraview CMDER (Only for Windows) (After installation, open cmder and then go to Settings(Win+Alt+P)\u27a1import and choose the cmlab.xml provided in the repository.) Google Chrome (After installation, open Chrome and paste the following in the address bar, chrome://flags/. In the flags screen, enable WebGL Developer Extensions )","title":"Prerequisites"},{"location":"1_introduction/2_installation/#install-fenics","text":"Once the docker system is installed and running, open CMDER/terminal and run: docker pull iitrabhi/fenics_notebook","title":"Install FEniCS"},{"location":"1_introduction/2_installation/#running","text":"To start the notebook server, use the following: docker run -p 8888:8888 -v host_system_path:/root/ -w /root/ iitrabhi/fenics_notebook Note: you should replace the variable host_system_path with the path of the folder that contains your code. e.g., If D:\\Codes contains your code, then to start the command line interface, you have to run: docker run -p 8888:8888 -v D:\\Codes:/root/ -w /root/ iitrabhi/fenics_notebook Once you run the above command in cmder, you will get a URL starting with http://127.0.0.1:8888/lab . Press Control and click on the URL to open a new Jupyter Notebook.","title":"Running"},{"location":"1_introduction/2_installation/#if-you-have-windows-home","text":"You can use google collab to run FEniCS on the cloud. Open Collab , upload your notebook and paste the following in the first cell of your notebook. try: import dolfin except ImportError: !wget \"https://fem-on-colab.github.io/releases/fenics-install.sh\" -O \"/tmp/fenics-install.sh\" && bash \"/tmp/fenics-install.sh\" import dolfin https://fem-on-colab.github.io/packages.html","title":"If you have Windows home"},{"location":"1_introduction/3_quickstart/","text":"","title":"3 quickstart"},{"location":"1_introduction/4_faq/","text":"Where to find help When in doubt about any specific FEniCS command or implementation, there are several resources you can refer to for clarification and assistance: FEniCS Book: The official FEniCS book is an invaluable resource. It provides comprehensive documentation, tutorials, examples, and detailed explanations of all FEniCS functionalities. You can find it at: The FEniCS Book FEniCS Q&A Forum: The FEniCS Q&A forum is an active community where users and developers discuss issues, ask questions, and share knowledge about FEniCS. You can post your questions here and get help from experienced FEniCS users and developers. Access the forum at FEniCS discourse FEniCS Workshop Slack channel: You can also join the FEniCS workshop community on Slack to connect with other users, developers, and experts in the field. Slack is an excellent platform for real-time discussions, sharing knowledge, and getting help with FEniCS-related topics. You can join the Slack community by using this link . FEniCS online documentation: The online documentation since V1.3.0 is available at this link . You can go into the python folder of any version to find the syntax and meaning of different commands. The latest version is not that descriptive, and thus I recommend checking out older documentation, as most of the commands are the same. Note: Please go through the official community page here . Books to read Bleyer, Jeremy. \u201cNumerical Tours of Continuum Mechanics Using FEniCS,\u201d n.d., 105. Langtangen, Hans Petter, and Anders Logg. \u201cSolving PDEs in Python \u2013 The FEniCS Tutorial Volume I,\u201d n.d., 153. Langtangen, Hans Petter, and Kent-Andre Mardal. \u201cIntroduction to Numerical Methods for Variational Problems\u201d. Vol. 21. Texts in Computational Science and Engineering. Cham: Springer International Publishing, 2019. https://doi.org/10.1007/978-3-030-23788-2. Logg, Anders, Kent-Andre Mardal, and Garth Wells, eds. \u201cAutomated Solution of Differential Equations by the Finite Element Method\u201d. Vol. 84. Lecture Notes in Computational Science and Engineering. Berlin, Heidelberg: Springer Berlin Heidelberg, 2012. https://doi.org/10.1007/978-3-642-23099-8.","title":"4 faq"},{"location":"1_introduction/4_faq/#where-to-find-help","text":"When in doubt about any specific FEniCS command or implementation, there are several resources you can refer to for clarification and assistance: FEniCS Book: The official FEniCS book is an invaluable resource. It provides comprehensive documentation, tutorials, examples, and detailed explanations of all FEniCS functionalities. You can find it at: The FEniCS Book FEniCS Q&A Forum: The FEniCS Q&A forum is an active community where users and developers discuss issues, ask questions, and share knowledge about FEniCS. You can post your questions here and get help from experienced FEniCS users and developers. Access the forum at FEniCS discourse FEniCS Workshop Slack channel: You can also join the FEniCS workshop community on Slack to connect with other users, developers, and experts in the field. Slack is an excellent platform for real-time discussions, sharing knowledge, and getting help with FEniCS-related topics. You can join the Slack community by using this link . FEniCS online documentation: The online documentation since V1.3.0 is available at this link . You can go into the python folder of any version to find the syntax and meaning of different commands. The latest version is not that descriptive, and thus I recommend checking out older documentation, as most of the commands are the same. Note: Please go through the official community page here .","title":"Where to find help"},{"location":"1_introduction/4_faq/#books-to-read","text":"Bleyer, Jeremy. \u201cNumerical Tours of Continuum Mechanics Using FEniCS,\u201d n.d., 105. Langtangen, Hans Petter, and Anders Logg. \u201cSolving PDEs in Python \u2013 The FEniCS Tutorial Volume I,\u201d n.d., 153. Langtangen, Hans Petter, and Kent-Andre Mardal. \u201cIntroduction to Numerical Methods for Variational Problems\u201d. Vol. 21. Texts in Computational Science and Engineering. Cham: Springer International Publishing, 2019. https://doi.org/10.1007/978-3-030-23788-2. Logg, Anders, Kent-Andre Mardal, and Garth Wells, eds. \u201cAutomated Solution of Differential Equations by the Finite Element Method\u201d. Vol. 84. Lecture Notes in Computational Science and Engineering. Berlin, Heidelberg: Springer Berlin Heidelberg, 2012. https://doi.org/10.1007/978-3-642-23099-8.","title":"Books to read"},{"location":"2_chapter/1_lesson/","text":"","title":"1 lesson"},{"location":"3_chapter/1_lesson/","text":"","title":"1 lesson"}]}